(()=>{"use strict";var __webpack_modules__={448:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/pixi.js-legacy/lib/index.mjs + 37 modules\nvar lib = __webpack_require__(764);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(75);\n;// CONCATENATED MODULE: ./esm/StageTexture.js\n\n\nclass StageTexture_StageTexture extends three_module/* Texture */.xEZ {\n  constructor(width, height) {\n    super();\n    this.onRequestFrame = e => {\n      if (!this._needUpdateCanvas) return;\n      this.update();\n      this._needUpdateCanvas = false;\n    };\n    this.init(width, height);\n  }\n  init(width, height) {\n    this._app = new lib/* Application */.MxU({\n      autoStart: false,\n      backgroundAlpha: 0.0,\n      forceCanvas: true,\n      width: width,\n      height: height\n    });\n    this.image = this._app.view;\n    this.minFilter = three_module/* LinearFilter */.wem;\n    this._stage = this._app.stage;\n    this.isStart = false;\n    this.start();\n  }\n  /**\n   * テクスチャの更新を開始する\n   */\n  start() {\n    if (this.isStart) return;\n    this.isStart = true;\n    lib/* Ticker.shared.add */.vB5.shared.add(this.onRequestFrame);\n  }\n  /**\n   * テクスチャの更新を停止する\n   */\n  stop() {\n    if (this.isStart) return;\n    this.isStart = false;\n    lib/* Ticker.shared.remove */.vB5.shared.remove(this.onRequestFrame);\n  }\n  update() {\n    this._app.render();\n    this.needsUpdate = true;\n  }\n  setNeedUpdate() {\n    this._needUpdateCanvas = true;\n  }\n  /**\n   * このテクスチャに紐づけられたstageインスタンスを取得する。\n   * カンバスへはstage.canvasでアクセスする。\n   */\n  get stage() {\n    return this._stage;\n  }\n  get domElement() {\n    return this._app.view;\n  }\n}\n;// CONCATENATED MODULE: ./esm/StageBillBoard.js\n\n\n\n\nclass StageBillBoard extends (/* unused pure expression or super */ null && (Sprite)) {\n  constructor(width, height, imageScale = 1, option) {\n    super();\n    this._imageScale = imageScale;\n    option = BillBoardOptionUtil.init(option);\n    this.initTexture(width, height, option);\n  }\n  initTexture(width, height, option) {\n    const texture = new StageTexture(width, height);\n    texture.minFilter = option.minFilter;\n    this.material = new SpriteMaterial({\n      map: texture,\n      blending: NormalBlending,\n      depthTest: false,\n      transparent: true\n    });\n    this.updateScale();\n  }\n  get imageScale() {\n    return this._imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   *\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   *\n   * @param value\n   */\n  set imageScale(value) {\n    this._imageScale = value;\n    this.updateScale();\n  }\n  /**\n   * テクスチャ画像のアスペクト比を維持したままスケールを調整する。\n   */\n  updateScale() {\n    const map = this.material.map;\n    const canvas = map.domElement;\n    this.scale.set(canvas.width * this._imageScale, canvas.height * this._imageScale, 1);\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n  setVisible(visible) {\n    StageObject3D.setVisible(this, visible);\n  }\n  getMap() {\n    return this.material.map;\n  }\n  get stage() {\n    return this.getMap().stage;\n  }\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n}\n;// CONCATENATED MODULE: ./esm/CameraChaser.js\n\nclass CameraChaser {\n  constructor(target) {\n    /**\n     * 水平方向に回転し、カメラに追従するか否か。\n     */\n    this.isLookingCameraHorizontal = false;\n    this.cameraPos = new three_module/* Vector3 */.Pa4();\n    this.worldPos = new three_module/* Vector3 */.Pa4();\n    this.needUpdateWorldPosition = false;\n    /**\n     * Planeをカメラに向ける。lookCameraHorizontal = trueの時だけ稼働する。\n     * 回転方向はY軸を中心とした左右方向のみ。\n     * (X軸方向には回転しない。X軸方向に回転させたい場合はBillBoardクラスを利用する。)\n     *\n     * カメラ位置がPlaneの北極、南極をまたぐと急激に回転するので注意。\n     * 利用する場合はカメラの高さ方向に制限をかけた方が良い。\n     *\n     * @param render\n     * @param scene\n     * @param camera\n     * @param geometry\n     * @param material\n     * @param group\n     */\n    this.lookCamera = (render, scene, camera, geometry, material, group) => {\n      if (!this.isLookingCameraHorizontal) return;\n      if (this.needUpdateWorldPosition) {\n        this.target.getWorldPosition(this.worldPos);\n        this.needUpdateWorldPosition = false;\n      }\n      this.cameraPos.set(camera.position.x, this.worldPos.y, camera.position.z);\n      this.target.lookAt(this.cameraPos);\n    };\n    this.target = target;\n    this.target.getWorldPosition(this.worldPos);\n    this.target.onBeforeRender = this.lookCamera;\n  }\n}\n;// CONCATENATED MODULE: ./esm/StageObject3D.js\nclass StageObject3D_StageObject3D {\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param object 表示オブジェクト\n   * @param visible\n   */\n  static setVisible(object, visible) {\n    if (object.visible === visible) {\n      return;\n    }\n    object.visible = visible;\n    const map = object.material.map;\n    if (map == null) return;\n    if (object.visible) {\n      map.start();\n    } else {\n      map.stop();\n    }\n  }\n}\n;// CONCATENATED MODULE: ./esm/StagePlaneMesh.js\n\n\n\n\n/**\n * Canvasに描画可能な板オブジェクト。\n * ビルボードと異なり、カメラには追従しない。\n *\n * ジオメトリはPlaneBufferGeometryなので、中心点からずらす場合はtranslateを使用する。\n * https://threejs.org/docs/#api/en/core/BufferGeometry.translate\n */\nclass StagePlaneMesh extends three_module/* Mesh */.Kj0 {\n  /**\n   * コンストラクタ\n   * @param width カンバスの幅\n   * @param height カンバスの高さ\n   * @param option テクスチャの初期化オプション\n   */\n  constructor(width, height, option) {\n    super();\n    this.initCanvas(width, height, option);\n    this.geometry = new three_module/* PlaneGeometry */._12(width, height);\n    this.cameraChaser = new CameraChaser(this);\n  }\n  /**\n   * 描画用カンバスを初期化し、自分自身のマテリアルに格納する。\n   * @param width\n   * @param height\n   * @param option\n   */\n  initCanvas(width, height, option) {\n    const texture = new StageTexture_StageTexture(width, height);\n    this.material = new three_module/* MeshBasicMaterial */.vBJ({\n      map: texture,\n      blending: three_module/* NormalBlending */.bdR,\n      transparent: true,\n      depthTest: true\n    });\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n  setVisible(visible) {\n    StageObject3D_StageObject3D.setVisible(this, visible);\n  }\n  getMap() {\n    return this.material.map;\n  }\n  get stage() {\n    return this.getMap().stage;\n  }\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(12);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\nfunction initScene() {\n  const scene = new three_module/* Scene */.xsS();\n  return scene;\n}\nfunction initLight(scene) {\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return ambientLight;\n}\nfunction initCamera(scene, W, H) {\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 100);\n  camera.updateMatrixWorld(false);\n  scene.add(camera);\n  return camera;\n}\nfunction initControl(camera, render) {\n  const control = new OrbitControls/* OrbitControls */.z(camera, render.domElement);\n  control.update();\n  return control;\n}\nfunction initRenderer(W, H) {\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  return renderer;\n}\nfunction initHelper(scene) {\n  const axesHelper = new three_module/* AxesHelper */.y8_(30);\n  scene.add(axesHelper);\n}\nfunction initSceneSet(W, H) {\n  const scene = initScene();\n  initLight(scene);\n  const camera = initCamera(scene, W, H);\n  const renderer = initRenderer(W, H);\n  const control = initControl(camera, renderer);\n  initHelper(scene);\n  render(control, renderer, scene, camera);\n  return scene;\n}\nfunction render(control, renderer, scene, camera) {\n  const rendering = () => {\n    control.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(rendering);\n  };\n  rendering();\n}\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 111 modules\nvar pixi_js_lib = __webpack_require__(350);\n;// CONCATENATED MODULE: ./demoSrc/demo_StagePlaneMesh.js\n\n\n\nconst W = 640;\nconst H = 480;\nconst onDomContentsLoaded = () => {\n  const scene = initSceneSet(W, H);\n  initBillBoard(scene);\n};\nconst initBillBoard = scene => {\n  const initMesh = (x, y, z) => {\n    const mesh = new StagePlaneMesh(320, 320);\n    mesh.position.set(x, y, z);\n    scene.add(mesh);\n    mesh.scale.set(0.05, 0.05, 1);\n    initMap(mesh);\n    return mesh;\n  };\n  initMesh(-20, 0, 0);\n  const mesh = initMesh(20, 0, 0);\n  mesh.cameraChaser.isLookingCameraHorizontal = true;\n};\nconst initMap = mesh => {\n  const shape = new pixi_js_lib/* Graphics */.TCu();\n  shape.beginFill(0xff0000).drawRect(0, 0, 320, 320).endFill();\n  mesh.stage.addChild(shape);\n  const text = new pixi_js_lib/* Text */.xvT("Hello World", {\n    fontSize: 48,\n    fontFamily: "Arial",\n    fill: "#ff7700"\n  });\n  mesh.stage.addChild(text);\n  text.x = 20;\n  text.y = 160;\n  mesh.setNeedUpdate();\n};\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///448\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var I=1/0;for(i=0;i<deferred.length;i++){for(var[U,F,B]=deferred[i],g=!0,e=0;e<U.length;e++)(!1&B||I>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[e])))?U.splice(e--,1):(g=!1,B<I&&(I=B));if(g){deferred.splice(i--,1);var s=F();void 0!==s&&(Q=s)}}return Q}B=B||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>B;i--)deferred[i]=deferred[i-1];deferred[i]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=957,(()=>{var Q={957:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,I,[g,e,s]=F,i=0;if(g.some((U=>0!==Q[U]))){for(B in e)__webpack_require__.o(e,B)&&(__webpack_require__.m[B]=e[B]);if(s)var C=s(__webpack_require__)}for(U&&U(F);i<g.length;i++)I=g[i],__webpack_require__.o(Q,I)&&Q[I]&&Q[I][0](),Q[I]=0;return __webpack_require__.O(C)},F=self.webpackChunk_masatomakino_threejs_billboard=self.webpackChunk_masatomakino_threejs_billboard||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(448)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();