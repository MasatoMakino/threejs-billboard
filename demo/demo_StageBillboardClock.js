(()=>{"use strict";var __webpack_modules__={27:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(75);\n;// CONCATENATED MODULE: ./esm/BillBoard.js\n\n\nclass BillBoardOptionUtil {\n  static init(option) {\n    if (option == null) {\n      option = {};\n    }\n\n    if (option.minFilter == null) {\n      option.minFilter = three_module/* LinearFilter */.wem;\n    }\n\n    return option;\n  }\n\n}\n/**\n * 画像ファイルをテクスチャとするビルボードクラス\n */\n\nclass BillBoard extends (/* unused pure expression or super */ null && (Sprite)) {\n  /**\n   * コンストラクタ\n   * @param url テクスチャー画像ファイルのURL\n   * @param imageScale\n   * @param option\n   */\n  constructor(url, imageScale, option) {\n    super();\n    option = BillBoardOptionUtil.init(option);\n    this.obj = new BillBoardController(this, url, imageScale, option);\n  }\n\n  get imageScale() {\n    return this.obj.imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   * @param value\n   */\n\n\n  set imageScale(value) {\n    this.obj.imageScale = value;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/StageObject3D.js\nclass StageObject3D_StageObject3D {\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param object 表示オブジェクト\n   * @param visible\n   */\n  static setVisible(object, visible) {\n    if (object.visible === visible) {\n      return;\n    }\n\n    object.visible = visible;\n    const map = object.material.map;\n    if (map == null) return;\n\n    if (object.visible) {\n      map.start();\n    } else {\n      map.stop();\n    }\n  }\n\n}\n// EXTERNAL MODULE: ./node_modules/pixi.js-legacy/lib/index.mjs + 37 modules\nvar lib = __webpack_require__(764);\n;// CONCATENATED MODULE: ./esm/StageTexture.js\n\n\nclass StageTexture_StageTexture extends three_module/* Texture */.xEZ {\n  constructor(width, height) {\n    super();\n\n    this.onRequestFrame = e => {\n      if (!this._needUpdateCanvas) return;\n      this.update();\n      this._needUpdateCanvas = false;\n    };\n\n    this.init(width, height);\n  }\n\n  init(width, height) {\n    this._app = new lib/* Application */.MxU({\n      autoStart: false,\n      backgroundAlpha: 0.0,\n      forceCanvas: true,\n      width: width,\n      height: height\n    });\n    this.image = this._app.view;\n    this.minFilter = three_module/* LinearFilter */.wem;\n    this._stage = this._app.stage;\n    this.isStart = false;\n    this.start();\n  }\n  /**\n   * テクスチャの更新を開始する\n   */\n\n\n  start() {\n    if (this.isStart) return;\n    this.isStart = true;\n    lib/* Ticker.shared.add */.vB5.shared.add(this.onRequestFrame);\n  }\n  /**\n   * テクスチャの更新を停止する\n   */\n\n\n  stop() {\n    if (this.isStart) return;\n    this.isStart = false;\n    lib/* Ticker.shared.remove */.vB5.shared.remove(this.onRequestFrame);\n  }\n\n  update() {\n    this._app.render();\n\n    this.needsUpdate = true;\n  }\n\n  setNeedUpdate() {\n    this._needUpdateCanvas = true;\n  }\n  /**\n   * このテクスチャに紐づけられたstageインスタンスを取得する。\n   * カンバスへはstage.canvasでアクセスする。\n   */\n\n\n  get stage() {\n    return this._stage;\n  }\n\n  get domElement() {\n    return this._app.view;\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/StageBillBoard.js\n\n\n\n\nclass StageBillBoard extends three_module/* Sprite */.jyi {\n  constructor(width, height, imageScale = 1, option) {\n    super();\n    this._imageScale = imageScale;\n    option = BillBoardOptionUtil.init(option);\n    this.initTexture(width, height, option);\n  }\n\n  initTexture(width, height, option) {\n    const texture = new StageTexture_StageTexture(width, height);\n    texture.minFilter = option.minFilter;\n    this.material = new three_module/* SpriteMaterial */.xeV({\n      map: texture,\n      blending: three_module/* NormalBlending */.bdR,\n      depthTest: false,\n      transparent: true\n    });\n    this.updateScale();\n  }\n\n  get imageScale() {\n    return this._imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   *\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   *\n   * @param value\n   */\n\n\n  set imageScale(value) {\n    this._imageScale = value;\n    this.updateScale();\n  }\n  /**\n   * テクスチャ画像のアスペクト比を維持したままスケールを調整する。\n   */\n\n\n  updateScale() {\n    const map = this.material.map;\n    const canvas = map.domElement;\n    this.scale.set(canvas.width * this._imageScale, canvas.height * this._imageScale, 1);\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n\n\n  setVisible(visible) {\n    StageObject3D_StageObject3D.setVisible(this, visible);\n  }\n\n  getMap() {\n    return this.material.map;\n  }\n\n  get stage() {\n    return this.getMap().stage;\n  }\n\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/StagePlaneMesh.js\n\n\n\n\n/**\n * Canvasに描画可能な板オブジェクト。\n * ビルボードと異なり、カメラには追従しない。\n *\n * ジオメトリはPlaneBufferGeometryなので、中心点からずらす場合はtranslateを使用する。\n * https://threejs.org/docs/#api/en/core/BufferGeometry.translate\n */\n\nclass StagePlaneMesh extends (/* unused pure expression or super */ null && (Mesh)) {\n  /**\n   * コンストラクタ\n   * @param width カンバスの幅\n   * @param height カンバスの高さ\n   * @param option テクスチャの初期化オプション\n   */\n  constructor(width, height, option) {\n    super();\n    this.initCanvas(width, height, option);\n    this.geometry = new PlaneGeometry(width, height);\n    this.cameraChaser = new CameraChaser(this);\n  }\n  /**\n   * 描画用カンバスを初期化し、自分自身のマテリアルに格納する。\n   * @param width\n   * @param height\n   * @param option\n   */\n\n\n  initCanvas(width, height, option) {\n    const texture = new StageTexture(width, height);\n    this.material = new MeshBasicMaterial({\n      map: texture,\n      blending: NormalBlending,\n      transparent: true,\n      depthTest: true\n    });\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n\n\n  setVisible(visible) {\n    StageObject3D.setVisible(this, visible);\n  }\n\n  getMap() {\n    return this.material.map;\n  }\n\n  get stage() {\n    return this.getMap().stage;\n  }\n\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(12);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\nfunction initScene() {\n  const scene = new three_module/* Scene */.xsS();\n  return scene;\n}\nfunction initLight(scene) {\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return ambientLight;\n}\nfunction initCamera(scene, W, H) {\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 100);\n  camera.updateMatrixWorld(false);\n  scene.add(camera);\n  return camera;\n}\nfunction initControl(camera, render) {\n  const control = new OrbitControls/* OrbitControls */.z(camera, render.domElement);\n  control.update();\n  return control;\n}\nfunction initRenderer(W, H) {\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  return renderer;\n}\nfunction initHelper(scene) {\n  const axesHelper = new three_module/* AxesHelper */.y8_(30);\n  scene.add(axesHelper);\n}\nfunction initSceneSet(W, H) {\n  const scene = initScene();\n  initLight(scene);\n  const camera = initCamera(scene, W, H);\n  const renderer = initRenderer(W, H);\n  const control = initControl(camera, renderer);\n  initHelper(scene);\n  render(control, renderer, scene, camera);\n  return scene;\n}\nfunction render(control, renderer, scene, camera) {\n  const rendering = () => {\n    control.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(rendering);\n  };\n\n  rendering();\n}\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 111 modules\nvar pixi_js_lib = __webpack_require__(350);\n// EXTERNAL MODULE: ./node_modules/date-fns/esm/format/index.js\nvar format = __webpack_require__(106);\n;// CONCATENATED MODULE: ./demoSrc/demo_StageBillboardClock.js\n\n\n\n\nconst W = 640;\nconst H = 480;\n\nconst onDomContentsLoaded = () => {\n  const scene = initSceneSet(W, H);\n  initBillBoard(scene);\n};\n\nconst initBillBoard = scene => {\n  const updateText = () => {\n    text.text = (0,format/* default */.Z)(new Date(), "yyyy/MM/dd HH:mm:ss");\n    canvasBoard.setNeedUpdate();\n  };\n\n  const canvasBoard = new StageBillBoard(320, 320, 0.1);\n  canvasBoard.position.set(15, 0, 0);\n  scene.add(canvasBoard);\n  const text = new pixi_js_lib/* Text */.xvT("", {\n    fontSize: 24,\n    fontFamily: "Arial",\n    fill: "#ff7700"\n  });\n  canvasBoard.stage.addChild(text);\n  text.x = 20;\n  text.y = 160;\n  updateText();\n  setInterval(updateText, 1000);\n};\n\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///27\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(B.exports,B,B.exports,__webpack_require__),B.loaded=!0,B.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,B,U)=>{if(!F){var g=1/0;for(C=0;C<deferred.length;C++){for(var[F,B,U]=deferred[C],I=!0,n=0;n<F.length;n++)(!1&U||g>=U)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[n])))?F.splice(n--,1):(I=!1,U<g&&(g=U));if(I){deferred.splice(C--,1);var e=B();void 0!==e&&(Q=e)}}return Q}U=U||0;for(var C=deferred.length;C>0&&deferred[C-1][2]>U;C--)deferred[C]=deferred[C-1];deferred[C]=[F,B,U]},__webpack_require__.d=(Q,F)=>{for(var B in F)__webpack_require__.o(F,B)&&!__webpack_require__.o(Q,B)&&Object.defineProperty(Q,B,{enumerable:!0,get:F[B]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=781,(()=>{var Q={781:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,B)=>{var U,g,[I,n,e]=B,C=0;if(I.some((F=>0!==Q[F]))){for(U in n)__webpack_require__.o(n,U)&&(__webpack_require__.m[U]=n[U]);if(e)var i=e(__webpack_require__)}for(F&&F(B);C<I.length;C++)g=I[C],__webpack_require__.o(Q,g)&&Q[g]&&Q[g][0](),Q[g]=0;return __webpack_require__.O(i)},B=self.webpackChunk_masatomakino_threejs_billboard=self.webpackChunk_masatomakino_threejs_billboard||[];B.forEach(F.bind(null,0)),B.push=F.bind(null,B.push.bind(B))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(27)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();