(()=>{"use strict";var __webpack_modules__={3133:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(7429);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6075);\n;// CONCATENATED MODULE: ./esm/BillBoardPlane.js\n\n\n\nclass BillBoardPlane extends (/* unused pure expression or super */ null && (Mesh)) {\n  /**\n   * コンストラクタ\n   * @param url テクスチャー画像ファイルのURL\n   * @param imageScale\n   * @param option\n   */\n  constructor(url, imageScale, option) {\n    super();\n    const initializedOption = BillBoardOptionUtil.init(option);\n    this.obj = new BillBoardController(this, url, imageScale, initializedOption);\n    this.cameraChaser = new CameraChaser(this);\n  }\n  get imageScale() {\n    return this.obj.imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   * @param value\n   */\n  set imageScale(value) {\n    this.obj.imageScale = value;\n  }\n}\n// EXTERNAL MODULE: ./node_modules/pixi.js/lib/index.mjs + 2 modules\nvar lib = __webpack_require__(3306);\n;// CONCATENATED MODULE: ./esm/SharedStageTexture.js\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");\n  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");\n  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === "m") throw new TypeError("Private method is not writable");\n  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");\n  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");\n  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _SharedStageTexture__needsUpdateStage;\n\n\n/**\n * Billboard用の共有テクスチャ\n * 各Billboardはこのテクスチャを参照し、UV座標を調整して画像を表示する。\n *\n * デフォルトでは、テクスチャは自動更新されない。\n * テクスチャを共有するBillboardが責任を持って、setNeedUpdate関数を呼び出してテクスチャの更新を宣言する必要がある。\n */\nclass SharedStageTexture extends three_module/* Texture */.xEZ {\n  /**\n   * 共有テクスチャを生成する\n   */\n  constructor() {\n    super();\n    _SharedStageTexture__needsUpdateStage.set(this, false);\n    this.onRequestFrame = () => {\n      if (!__classPrivateFieldGet(this, _SharedStageTexture__needsUpdateStage, "f")) return;\n      this.app.render();\n      this.needsUpdate = true;\n      __classPrivateFieldSet(this, _SharedStageTexture__needsUpdateStage, false, "f");\n    };\n    this.app = new lib/* Application */.MxU();\n    this.colorSpace = "srgb";\n  }\n  /**\n   * 共有テクスチャ用のPixi.jsインスタンスを初期化する\n   *\n   * @param width テクスチャの幅 単位ビクセル pow2であることを推奨\n   * @param height テクスチャの高さ 単位ビクセル pow2であることを推奨\n   */\n  init(width, height) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.app.init({\n        autoStart: false,\n        backgroundAlpha: 0.0,\n        width,\n        height\n      });\n      this.image = this.app.canvas;\n      lib/* Ticker */.vB5.shared.add(this.onRequestFrame);\n    });\n  }\n  get stage() {\n    return this.app.stage;\n  }\n  get width() {\n    return this.app.renderer.width;\n  }\n  get height() {\n    return this.app.renderer.height;\n  }\n  /**\n   * テクスチャの更新を宣言する\n   *\n   * この関数が呼び出されると、次のフレームのレンダリング時にテクスチャが更新される。\n   */\n  setNeedUpdate() {\n    __classPrivateFieldSet(this, _SharedStageTexture__needsUpdateStage, true, "f");\n  }\n  calcurateUV(rect) {\n    return {\n      x1: rect.x / this.width,\n      y1: (this.height - rect.y - rect.height) / this.height,\n      x2: (rect.x + rect.width) / this.width,\n      y2: (this.height - rect.y) / this.height\n    };\n  }\n}\n_SharedStageTexture__needsUpdateStage = new WeakMap();\nconst SharedStageTexture_isSharedStageMaterial = material => {\n  return "map" in material && material.map instanceof SharedStageTexture;\n};\n/**\n * ジオメトリにUV座標を設定する。\n */\nconst SharedStageTexture_updateUVAttribute = (geometry, material, textureArea) => {\n  if (!SharedStageTexture_isSharedStageMaterial(material)) {\n    throw new Error("sharedMaterial.map must be SharedStageTexture");\n  }\n  const area = material.map.calcurateUV(textureArea);\n  const uv = geometry.getAttribute("uv");\n  uv.setXY(0, area.x1, area.y2);\n  uv.setXY(1, area.x2, area.y2);\n  uv.setXY(2, area.x1, area.y1);\n  uv.setXY(3, area.x2, area.y1);\n  uv.needsUpdate = true;\n};\n;// CONCATENATED MODULE: ./esm/SharedStageBillboard.js\n\n\nclass SharedStageBillboard extends three_module/* Sprite */.jyi {\n  get imageScale() {\n    return this._imageScale;\n  }\n  set imageScale(value) {\n    this._imageScale = value;\n    this.updateScale();\n  }\n  /**\n   * 現在の表示領域を取得する。\n   *\n   * @returns テクスチャの表示領域 単位ビクセル\n   */\n  cloneTextureArea() {\n    return Object.assign({}, this._textureArea);\n  }\n  /**\n   * 共有テクスチャからビルボードに表示する領域を更新する。\n   *\n   * @param value テクスチャの表示領域 単位ビクセル\n   */\n  updateTextureAreaAndUV(value) {\n    this._textureArea = Object.assign({}, value);\n    this.updateScale();\n    this.updateUVAttribute();\n  }\n  constructor(sharedMaterial, _textureArea, _imageScale = 1) {\n    super();\n    this.sharedMaterial = sharedMaterial;\n    this._textureArea = _textureArea;\n    this._imageScale = _imageScale;\n    if (!SharedStageTexture_isSharedStageMaterial(sharedMaterial)) {\n      throw new Error("sharedMaterial.map must be SharedStageTexture");\n    }\n    /**\n     * SharedStageBillboardでは、Sprite間でジオメトリを共有しない。\n     * 個別にUV座標を持つため。\n     * また、PlaneとpositionおよびUVを共通化するためPlaneGeometryを使用する。\n     */\n    this.geometry = new three_module/* PlaneGeometry */._12();\n    this.material = sharedMaterial;\n    this.updateScale();\n    this.updateUVAttribute();\n  }\n  /**\n   * テクスチャ画像のアスペクト比を維持したままスケールを調整する。\n   */\n  updateScale() {\n    this.scale.set(this._textureArea.width * this._imageScale, this._textureArea.height * this._imageScale, 1);\n  }\n  /**\n   * ジオメトリにUV座標を設定する。\n   */\n  updateUVAttribute() {\n    SharedStageTexture_updateUVAttribute(this.geometry, this.sharedMaterial, this._textureArea);\n  }\n}\n;// CONCATENATED MODULE: ./esm/SharedStagePlaneMesh.js\n\n\n\n/**\n * Canvasに描画可能な板オブジェクト。\n * ビルボードと異なり、カメラには追従しない。\n *\n * ジオメトリはPlaneGeometryなので、中心点からずらす場合はtranslateを使用する。\n * https://threejs.org/docs/#api/en/core/BufferGeometry.translate\n *\n * 各頂点にはUV座標が設定される。\n * 4頂点2ポリゴンであることを前提としているため、それ以外のジオメトリを渡した場合は正常に動作しない。\n */\nclass SharedStagePlaneMesh extends (/* unused pure expression or super */ null && (Mesh)) {\n  /**\n   * 現在の表示領域を取得する。\n   *\n   * @returns テクスチャの表示領域 単位ビクセル\n   */\n  cloneTextureArea() {\n    return Object.assign({}, this._textureArea);\n  }\n  /**\n   * 共有テクスチャからビルボードに表示する領域を更新する。\n   *\n   * @param value テクスチャの表示領域 単位ビクセル\n   */\n  updateTextureAreaAndUV(value) {\n    const prevTextureArea = Object.assign({}, this._textureArea);\n    this._textureArea = Object.assign({}, value);\n    if (prevTextureArea.width !== value.width || prevTextureArea.height !== value.height) {\n      this.geometry = new PlaneGeometry(value.width, value.height);\n    }\n    this.updateUVAttribute();\n  }\n  constructor(sharedMaterial, _textureArea) {\n    super();\n    this.sharedMaterial = sharedMaterial;\n    this._textureArea = _textureArea;\n    this.cameraChaser = new CameraChaser(this);\n    if (!isSharedStageMaterial(sharedMaterial)) {\n      throw new Error("sharedMaterial.map must be SharedStageTexture");\n    }\n    this.geometry = new PlaneGeometry(_textureArea.width, _textureArea.height);\n    this.material = sharedMaterial;\n    this.updateUVAttribute();\n  }\n  /**\n   * ジオメトリにUV座標を設定する。\n   */\n  updateUVAttribute() {\n    updateUVAttribute(this.geometry, this.sharedMaterial, this._textureArea);\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(8012);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\n\n\nfunction initScene() {\n  const scene = new three_module/* Scene */.xsS();\n  return scene;\n}\nfunction initLight(scene) {\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return ambientLight;\n}\nfunction initCamera(scene, W, H) {\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 100);\n  camera.updateMatrixWorld(false);\n  scene.add(camera);\n  return camera;\n}\nfunction initControl(camera, render) {\n  const control = new OrbitControls/* OrbitControls */.z(camera, render.domElement);\n  control.update();\n  return control;\n}\nfunction initRenderer(W, H) {\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  return renderer;\n}\nfunction initHelper(scene) {\n  const axesHelper = new three_module/* AxesHelper */.y8_(30);\n  scene.add(axesHelper);\n}\nfunction initSceneSet(W, H) {\n  const scene = initScene();\n  initLight(scene);\n  const camera = initCamera(scene, W, H);\n  const renderer = initRenderer(W, H);\n  const control = initControl(camera, renderer);\n  initHelper(scene);\n  render(control, renderer, scene, camera);\n  return scene;\n}\nfunction render(control, renderer, scene, camera) {\n  const rendering = () => {\n    control.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(rendering);\n  };\n  rendering();\n}\nconst initSharedStageTextureGUI = (gui, object3D, name) => {\n  const target = object3D.cloneTextureArea();\n  const onUpdate = () => {\n    object3D.updateTextureAreaAndUV(target);\n  };\n  const folder = gui.addFolder(name);\n  folder.add(target, "x", 0, 1024, 1).onChange(onUpdate);\n  folder.add(target, "y", 0, 1024, 1).onChange(onUpdate);\n  folder.add(target, "width", 0, 1024, 1).onChange(onUpdate);\n  folder.add(target, "height", 0, 1024, 1).onChange(onUpdate);\n};\nconst initSharedTexture = async () => {\n  const texture = new SharedStageTexture();\n  await texture.init(1024, 1024);\n  await lib/* Assets */.deM.load("./uv_grid_opengl.jpg");\n  const sprite = lib/* Sprite */.jyi.from("./uv_grid_opengl.jpg");\n  texture.stage.addChild(sprite);\n  const text = new lib/* Text */.xvT({\n    text: "Hello World",\n    style: {\n      fontSize: 48,\n      fontFamily: "Arial",\n      fill: "#ff7700"\n    }\n  });\n  texture.stage.addChild(text);\n  text.x = 256;\n  text.y = 256 + 60;\n  texture.setNeedUpdate();\n  return texture;\n};\n;// CONCATENATED MODULE: ./demoSrc/demo_SharedStageBillboard.js\n\n\n\n\nconst W = 640;\nconst H = 480;\nconst onDomContentsLoaded = () => {\n  const scene = initSceneSet(W, H);\n  initBillBoards(scene);\n};\nconst initBillBoards = async scene => {\n  const texture = await initSharedTexture();\n  const material = new three_module/* SpriteMaterial */.xeV({\n    map: texture,\n    transparent: true,\n    depthTest: false\n  });\n  const canvasBoard = initPlane(scene, 30, material);\n  const canvasBoard2 = initPlane(scene, -30, material);\n  const gui = new lil_gui_esm/* default */.ZP();\n  initSharedStageTextureGUI(gui, canvasBoard, "board 01");\n  initSharedStageTextureGUI(gui, canvasBoard2, "board 02");\n};\nconst initPlane = (scene, positionX, material) => {\n  const canvasBoard = new SharedStageBillboard(material, {\n    x: 256,\n    y: 256,\n    width: 256,\n    height: 256\n  }, 0.1);\n  canvasBoard.position.set(positionX, 0, 0);\n  scene.add(canvasBoard);\n  return canvasBoard;\n};\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3133\n')}},__webpack_module_cache__={},deferred,inProgress,dataWebpackPrefix;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(l=0;l<deferred.length;l++){for(var[U,F,B]=deferred[l],s=!0,g=0;g<U.length;g++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[g])))?U.splice(g--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(l--,1);var t=F();void 0!==t&&(Q=t)}}return Q}B=B||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>B;l--)deferred[l]=deferred[l-1];deferred[l]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.f={},__webpack_require__.e=Q=>Promise.all(Object.keys(__webpack_require__.f).reduce(((U,F)=>(__webpack_require__.f[F](Q,U),U)),[])),__webpack_require__.u=Q=>Q+".js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),inProgress={},dataWebpackPrefix="@masatomakino/threejs-billboard:",__webpack_require__.l=(Q,U,F,B)=>{if(inProgress[Q])inProgress[Q].push(U);else{var e,s;if(void 0!==F)for(var g=document.getElementsByTagName("script"),t=0;t<g.length;t++){var l=g[t];if(l.getAttribute("src")==Q||l.getAttribute("data-webpack")==dataWebpackPrefix+F){e=l;break}}e||(s=!0,(e=document.createElement("script")).charset="utf-8",e.timeout=120,__webpack_require__.nc&&e.setAttribute("nonce",__webpack_require__.nc),e.setAttribute("data-webpack",dataWebpackPrefix+F),e.src=Q),inProgress[Q]=[U];var a=(U,F)=>{e.onerror=e.onload=null,clearTimeout(i);var B=inProgress[Q];if(delete inProgress[Q],e.parentNode&&e.parentNode.removeChild(e),B&&B.forEach((Q=>Q(F))),U)return U(F)},i=setTimeout(a.bind(null,void 0,{type:"timeout",target:e}),12e4);e.onerror=a.bind(null,e.onerror),e.onload=a.bind(null,e.onload),s&&document.head.appendChild(e)}},__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.j=718,(()=>{var Q;__webpack_require__.g.importScripts&&(Q=__webpack_require__.g.location+"");var U=__webpack_require__.g.document;if(!Q&&U&&(U.currentScript&&(Q=U.currentScript.src),!Q)){var F=U.getElementsByTagName("script");if(F.length)for(var B=F.length-1;B>-1&&!Q;)Q=F[B--].src}if(!Q)throw new Error("Automatic publicPath is not supported in this browser");Q=Q.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=Q})(),(()=>{var Q={718:0};__webpack_require__.f.j=(U,F)=>{var B=__webpack_require__.o(Q,U)?Q[U]:void 0;if(0!==B)if(B)F.push(B[2]);else{var e=new Promise(((F,e)=>B=Q[U]=[F,e]));F.push(B[2]=e);var s=__webpack_require__.p+__webpack_require__.u(U),g=new Error;__webpack_require__.l(s,(F=>{if(__webpack_require__.o(Q,U)&&(0!==(B=Q[U])&&(Q[U]=void 0),B)){var e=F&&("load"===F.type?"missing":F.type),s=F&&F.target&&F.target.src;g.message="Loading chunk "+U+" failed.\n("+e+": "+s+")",g.name="ChunkLoadError",g.type=e,g.request=s,B[1](g)}}),"chunk-"+U,U)}},__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[s,g,t]=F,l=0;if(s.some((U=>0!==Q[U]))){for(B in g)__webpack_require__.o(g,B)&&(__webpack_require__.m[B]=g[B]);if(t)var a=t(__webpack_require__)}for(U&&U(F);l<s.length;l++)e=s[l],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(a)},F=self.webpackChunk_masatomakino_threejs_billboard=self.webpackChunk_masatomakino_threejs_billboard||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(3133)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();