(()=>{var __webpack_modules__={8508:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6075);\n;// CONCATENATED MODULE: ./esm/BillBoard.js\n\n\nclass BillBoard_BillBoardOptionUtil {\n  static init(option) {\n    var _a;\n    option !== null && option !== void 0 ? option : option = {};\n    (_a = option.minFilter) !== null && _a !== void 0 ? _a : option.minFilter = three_module/* LinearFilter */.wem;\n    return option;\n  }\n}\n/**\n * 画像ファイルをテクスチャとするビルボードクラス\n */\nclass BillBoard extends (/* unused pure expression or super */ null && (Sprite)) {\n  /**\n   * コンストラクタ\n   * @param url テクスチャー画像ファイルのURL\n   * @param imageScale\n   * @param option\n   */\n  constructor(url, imageScale, option) {\n    super();\n    const initializedOption = BillBoard_BillBoardOptionUtil.init(option);\n    this.obj = new BillBoardController(this, url, imageScale, initializedOption);\n  }\n  get imageScale() {\n    return this.obj.imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   * @param value\n   */\n  set imageScale(value) {\n    this.obj.imageScale = value;\n  }\n}\n;// CONCATENATED MODULE: ./esm/BillBoardController.js\n\n/**\n * ビルボード処理に必要な機能を備えたクラス。\n * MeshやSprite内でこのクラスを呼び出すことで、ビルボードとして機能する。\n */\nclass BillBoardController_BillBoardController {\n  /**\n   * コンストラクタ\n   * @param target\n   * @param url テクスチャー画像ファイルのURL\n   * @param imageScale\n   * @param option\n   */\n  constructor(target, url, imageScale, option) {\n    this.isInitGeometry = false;\n    /**\n     * テクスチャ画像のアスペクト比を維持したままスケールを調整する。\n     */\n    this.updateScale = () => {\n      const map = this._target.material.map;\n      if (map == null || map.image == null) return;\n      const img = map.image;\n      this.initGeometry(img);\n      const scale = this.calculateScale(img);\n      this._target.scale.set(scale.x, scale.y, 1);\n    };\n    this._target = target;\n    this._imageScale = imageScale;\n    this.initDummyPlane(target);\n    const mat = this.getMaterial(target);\n    mat.visible = false;\n    this._target.material = mat;\n    this.textureLoaderPromise = new Promise((resolve, reject) => {\n      new three_module/* TextureLoader */.dpR().load(url, texture => {\n        texture.minFilter = option.minFilter;\n        texture.colorSpace = "srgb";\n        mat.map = texture;\n        mat.needsUpdate = true;\n        mat.visible = true;\n        this.updateScale();\n        resolve();\n      }, undefined, e => {\n        reject(e);\n      });\n    });\n  }\n  getMaterial(target) {\n    const param = {\n      blending: three_module/* NormalBlending */.bdR,\n      depthTest: true,\n      transparent: true\n    };\n    if (target instanceof three_module/* Mesh */.Kj0) {\n      return new three_module/* MeshBasicMaterial */.vBJ(param);\n    }\n    return new three_module/* SpriteMaterial */.xeV(param);\n  }\n  initDummyPlane(target) {\n    if (target instanceof three_module/* Mesh */.Kj0) {\n      const size = 0.0000001;\n      target.geometry = new three_module/* PlaneGeometry */._12(size, size);\n    }\n  }\n  initGeometry(image) {\n    if (!(this._target instanceof three_module/* Mesh */.Kj0)) return;\n    if (this.isInitGeometry) return;\n    this._target.geometry = new three_module/* PlaneGeometry */._12(image.width, image.height);\n    this.isInitGeometry = true;\n  }\n  calculateScale(img) {\n    if (this._target instanceof three_module/* Sprite */.jyi) {\n      return {\n        x: img.width * this._imageScale,\n        y: img.height * this._imageScale\n      };\n    }\n    return {\n      x: this._imageScale,\n      y: this._imageScale\n    };\n  }\n  get imageScale() {\n    return this._imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   *\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   *\n   * @param value\n   */\n  set imageScale(value) {\n    this._imageScale = value;\n    this.updateScale();\n  }\n}\n;// CONCATENATED MODULE: ./esm/CameraChaser.js\n\nclass CameraChaser_CameraChaser {\n  constructor(target) {\n    /**\n     * 水平方向に回転し、カメラに追従するか否か。\n     */\n    this.isLookingCameraHorizontal = false;\n    this.cameraPos = new three_module/* Vector3 */.Pa4();\n    this.worldPos = new three_module/* Vector3 */.Pa4();\n    this.needUpdateWorldPosition = false;\n    /**\n     * Planeをカメラに向ける。lookCameraHorizontal = trueの時だけ稼働する。\n     * 回転方向はY軸を中心とした左右方向のみ。\n     * (X軸方向には回転しない。X軸方向に回転させたい場合はBillBoardクラスを利用する。)\n     *\n     * カメラ位置がPlaneの北極、南極をまたぐと急激に回転するので注意。\n     * 利用する場合はカメラの高さ方向に制限をかけた方が良い。\n     *\n     * @param render\n     * @param scene\n     * @param camera\n     * @param geometry\n     * @param material\n     * @param group\n     */\n    this.lookCamera = (render, scene, camera, geometry, material, group) => {\n      if (!this.isLookingCameraHorizontal) return;\n      if (this.needUpdateWorldPosition) {\n        this.target.getWorldPosition(this.worldPos);\n        this.needUpdateWorldPosition = false;\n      }\n      this.cameraPos.set(camera.position.x, this.worldPos.y, camera.position.z);\n      this.target.lookAt(this.cameraPos);\n    };\n    this.target = target;\n    this.target.getWorldPosition(this.worldPos);\n    this.target.onBeforeRender = this.lookCamera;\n  }\n}\n;// CONCATENATED MODULE: ./esm/BillBoardPlane.js\n\n\n\n\nclass BillBoardPlane extends three_module/* Mesh */.Kj0 {\n  /**\n   * コンストラクタ\n   * @param url テクスチャー画像ファイルのURL\n   * @param imageScale\n   * @param option\n   */\n  constructor(url, imageScale, option) {\n    super();\n    const initializedOption = BillBoard_BillBoardOptionUtil.init(option);\n    this.obj = new BillBoardController_BillBoardController(this, url, imageScale, initializedOption);\n    this.cameraChaser = new CameraChaser_CameraChaser(this);\n  }\n  get imageScale() {\n    return this.obj.imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   * @param value\n   */\n  set imageScale(value) {\n    this.obj.imageScale = value;\n  }\n}\n// EXTERNAL MODULE: ./node_modules/pixi.js-legacy/lib/index.mjs + 37 modules\nvar lib = __webpack_require__(2764);\n;// CONCATENATED MODULE: ./esm/StageTexture.js\n\n\nclass StageTexture_StageTexture extends (/* unused pure expression or super */ null && (Texture)) {\n  get isStarted() {\n    return this._isStarted;\n  }\n  constructor(width, height) {\n    super();\n    this._needUpdateCanvas = false;\n    this._isStarted = false;\n    this.onRequestFrame = e => {\n      if (!this._needUpdateCanvas) return;\n      this.update();\n      this._needUpdateCanvas = false;\n    };\n    this._app = new Application({\n      autoStart: false,\n      backgroundAlpha: 0.0,\n      forceCanvas: true,\n      width: width,\n      height: height\n    });\n    this.image = this._app.view;\n    this.minFilter = LinearFilter;\n    this.colorSpace = "srgb";\n    this._stage = this._app.stage;\n    this.start();\n  }\n  /**\n   * テクスチャの更新を開始する\n   */\n  start() {\n    if (this._isStarted) return;\n    this._isStarted = true;\n    Ticker.shared.add(this.onRequestFrame);\n  }\n  /**\n   * テクスチャの更新を停止する\n   */\n  stop() {\n    if (!this._isStarted) return;\n    this._isStarted = false;\n    Ticker.shared.remove(this.onRequestFrame);\n  }\n  update() {\n    this._app.render();\n    this.needsUpdate = true;\n  }\n  setNeedUpdate() {\n    this._needUpdateCanvas = true;\n  }\n  /**\n   * このテクスチャに紐づけられたstageインスタンスを取得する。\n   * カンバスへはstage.canvasでアクセスする。\n   */\n  get stage() {\n    return this._stage;\n  }\n  get domElement() {\n    return this._app.view;\n  }\n}\n;// CONCATENATED MODULE: ./esm/StageBillBoard.js\n\n\n\n\nclass StageBillBoard extends (/* unused pure expression or super */ null && (Sprite)) {\n  constructor(width, height, imageScale = 1, option) {\n    super();\n    this._imageScale = imageScale;\n    const initializedOption = BillBoardOptionUtil.init(option);\n    this.initTexture(width, height, initializedOption);\n  }\n  initTexture(width, height, option) {\n    const texture = new StageTexture(width, height);\n    texture.minFilter = option.minFilter;\n    this.material = new SpriteMaterial({\n      map: texture,\n      blending: NormalBlending,\n      depthTest: false,\n      transparent: true\n    });\n    this.updateScale();\n  }\n  get imageScale() {\n    return this._imageScale;\n  }\n  /**\n   * 画像のスケールを指定する。\n   *\n   * ScaleCalculator.getDotByDotScale関数で得られた値を設定すると、ビルボードはテクスチャ画像のサイズのまま表示される。\n   *\n   * @param value\n   */\n  set imageScale(value) {\n    this._imageScale = value;\n    this.updateScale();\n  }\n  /**\n   * テクスチャ画像のアスペクト比を維持したままスケールを調整する。\n   */\n  updateScale() {\n    const map = this.material.map;\n    const canvas = map.domElement;\n    this.scale.set(canvas.width * this._imageScale, canvas.height * this._imageScale, 1);\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n  setVisible(visible) {\n    StageObject3D.setVisible(this, visible);\n  }\n  getMap() {\n    return this.material.map;\n  }\n  get stage() {\n    return this.getMap().stage;\n  }\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n}\n;// CONCATENATED MODULE: ./esm/StagePlaneMesh.js\n\n\n\n\n/**\n * Canvasに描画可能な板オブジェクト。\n * ビルボードと異なり、カメラには追従しない。\n *\n * ジオメトリはPlaneBufferGeometryなので、中心点からずらす場合はtranslateを使用する。\n * https://threejs.org/docs/#api/en/core/BufferGeometry.translate\n */\nclass StagePlaneMesh extends (/* unused pure expression or super */ null && (Mesh)) {\n  /**\n   * コンストラクタ\n   * @param width カンバスの幅\n   * @param height カンバスの高さ\n   * @param option テクスチャの初期化オプション\n   */\n  constructor(width, height, option) {\n    super();\n    this.initCanvas(width, height, option);\n    this.geometry = new PlaneGeometry(width, height);\n    this.cameraChaser = new CameraChaser(this);\n  }\n  /**\n   * 描画用カンバスを初期化し、自分自身のマテリアルに格納する。\n   * @param width\n   * @param height\n   * @param option\n   */\n  initCanvas(width, height, option) {\n    const texture = new StageTexture(width, height);\n    this.material = new MeshBasicMaterial({\n      map: texture,\n      blending: NormalBlending,\n      transparent: true,\n      depthTest: true\n    });\n  }\n  /**\n   * オブジェクトの表示/非表示を設定する。\n   * 設定に応じてテクスチャの更新を停止/再開する。\n   * @param visible\n   */\n  setVisible(visible) {\n    StageObject3D.setVisible(this, visible);\n  }\n  getMap() {\n    return this.material.map;\n  }\n  get stage() {\n    return this.getMap().stage;\n  }\n  setNeedUpdate() {\n    this.getMap().setNeedUpdate();\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(8012);\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\n\n\n\nfunction initScene() {\n  const scene = new three_module/* Scene */.xsS();\n  return scene;\n}\nfunction initLight(scene) {\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return ambientLight;\n}\nfunction initCamera(scene, W, H) {\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 100);\n  camera.updateMatrixWorld(false);\n  scene.add(camera);\n  return camera;\n}\nfunction initControl(camera, render) {\n  const control = new OrbitControls/* OrbitControls */.z(camera, render.domElement);\n  control.update();\n  return control;\n}\nfunction initRenderer(W, H) {\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  return renderer;\n}\nfunction initHelper(scene) {\n  const axesHelper = new three_module/* AxesHelper */.y8_(30);\n  scene.add(axesHelper);\n}\nfunction initSceneSet(W, H) {\n  const scene = initScene();\n  initLight(scene);\n  const camera = initCamera(scene, W, H);\n  const renderer = initRenderer(W, H);\n  const control = initControl(camera, renderer);\n  initHelper(scene);\n  render(control, renderer, scene, camera);\n  return scene;\n}\nfunction render(control, renderer, scene, camera) {\n  const rendering = () => {\n    control.update();\n    renderer.render(scene, camera);\n    requestAnimationFrame(rendering);\n  };\n  rendering();\n}\n;// CONCATENATED MODULE: ./demoSrc/demo_BillboardPlane.js\n\n\nconst W = 640;\nconst H = 480;\nconst onDomContentsLoaded = () => {\n  const scene = initSceneSet(W, H);\n  initBillBoard(scene);\n};\nconst initBillBoard = scene => {\n  const billboard = new BillBoardPlane("./map01.png", 0.1);\n  billboard.cameraChaser.isLookingCameraHorizontal = true;\n  scene.add(billboard);\n  const billboard2 = new BillBoardPlane("./map01.png", 0.1);\n  billboard2.position.set(-30, 0, 0);\n  billboard2.cameraChaser.isLookingCameraHorizontal = true;\n  scene.add(billboard2);\n};\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8508\n')},4654:()=>{}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var g=1/0;for(e=0;e<deferred.length;e++){for(var[U,F,B]=deferred[e],I=!0,C=0;C<U.length;C++)(!1&B||g>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[C])))?U.splice(C--,1):(I=!1,B<g&&(g=B));if(I){deferred.splice(e--,1);var l=F();void 0!==l&&(Q=l)}}return Q}B=B||0;for(var e=deferred.length;e>0&&deferred[e-1][2]>B;e--)deferred[e]=deferred[e-1];deferred[e]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=615,(()=>{var Q={615:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,g,[I,C,l]=F,e=0;if(I.some((U=>0!==Q[U]))){for(B in C)__webpack_require__.o(C,B)&&(__webpack_require__.m[B]=C[B]);if(l)var s=l(__webpack_require__)}for(U&&U(F);e<I.length;e++)g=I[e],__webpack_require__.o(Q,g)&&Q[g]&&Q[g][0](),Q[g]=0;return __webpack_require__.O(s)},F=self.webpackChunk_masatomakino_threejs_billboard=self.webpackChunk_masatomakino_threejs_billboard||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(8508)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();